# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2020-03-09 13:16
from __future__ import unicode_literals

import db.mixins
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artifact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('key', models.PositiveIntegerField()),
            ],
            bases=(models.Model, db.mixins.ExportModelMixin),
        ),
        migrations.CreateModel(
            name='ArtifactOwned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owned', models.BooleanField(default=False)),
                ('artifact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Artifact')),
            ],
        ),
        migrations.CreateModel(
            name='ArtifactStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artifacts', models.ManyToManyField(blank=True, to='db.ArtifactOwned')),
            ],
        ),
        migrations.CreateModel(
            name='BotInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(choices=[('running', 'RUNNING'), ('paused', 'PAUSED'), ('stopped', 'STOPPED')], default='stopped', max_length=255)),
                ('started', models.DateTimeField(blank=True, null=True)),
                ('function', models.CharField(blank=True, max_length=255, null=True)),
                ('next_raid_attack_reset', models.DateTimeField(blank=True, null=True)),
                ('next_break', models.DateTimeField(blank=True, null=True)),
                ('break_resume', models.DateTimeField(blank=True, null=True)),
                ('window_json', models.TextField(blank=True, null=True)),
                ('shortcuts', models.NullBooleanField()),
                ('stage', models.PositiveIntegerField(blank=True, null=True)),
                ('newest_hero', models.CharField(blank=True, max_length=255, null=True)),
                ('next_action_run', models.DateTimeField(blank=True, null=True)),
                ('next_master_level', models.DateTimeField(blank=True, null=True)),
                ('next_heroes_level', models.DateTimeField(blank=True, null=True)),
                ('next_skills_level', models.DateTimeField(blank=True, null=True)),
                ('next_skills_activation', models.DateTimeField(blank=True, null=True)),
                ('next_miscellaneous_actions', models.DateTimeField(blank=True, null=True)),
                ('next_headgear_swap', models.DateTimeField(blank=True, null=True)),
                ('next_perk_check', models.DateTimeField(blank=True, null=True)),
                ('next_prestige', models.DateTimeField(blank=True, null=True)),
                ('next_randomized_prestige', models.DateTimeField(blank=True, null=True)),
                ('next_statistics_update', models.DateTimeField(blank=True, null=True)),
                ('next_daily_achievement_check', models.DateTimeField(blank=True, null=True)),
                ('next_milestone_check', models.DateTimeField(blank=True, null=True)),
                ('next_raid_notifications', models.DateTimeField(blank=True, null=True)),
                ('next_heavenly_strike', models.DateTimeField(blank=True, null=True)),
                ('next_deadly_strike', models.DateTimeField(blank=True, null=True)),
                ('next_hand_of_midas', models.DateTimeField(blank=True, null=True)),
                ('next_fire_sword', models.DateTimeField(blank=True, null=True)),
                ('next_war_cry', models.DateTimeField(blank=True, null=True)),
                ('next_shadow_clone', models.DateTimeField(blank=True, null=True)),
                ('next_artifact_upgrade', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BotStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ads_collected', models.PositiveIntegerField(default=0)),
                ('properties_json', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('post_action_min_wait', models.PositiveIntegerField(default=0)),
                ('post_action_max_wait', models.PositiveIntegerField(default=1)),
                ('enable_taps', models.BooleanField(default=True)),
                ('repeat_taps', models.PositiveIntegerField(default=1)),
                ('enable_eggs', models.BooleanField(default=True)),
                ('enable_daily_rewards', models.BooleanField(default=True)),
                ('enable_clan_crates', models.BooleanField(default=True)),
                ('enable_tournaments', models.BooleanField(default=True)),
                ('miscellaneous_actions_every_x_seconds', models.PositiveIntegerField(default=900)),
                ('enable_minigames', models.BooleanField(default=False)),
                ('repeat_minigames', models.PositiveIntegerField(default=1)),
                ('enable_coordinated_offensive', models.BooleanField(default=False)),
                ('enable_astral_awakening', models.BooleanField(default=False)),
                ('enable_heart_of_midas', models.BooleanField(default=False)),
                ('enable_flash_zip', models.BooleanField(default=False)),
                ('enable_breaks', models.BooleanField(default=True)),
                ('breaks_jitter', models.PositiveIntegerField(default=40)),
                ('breaks_minutes_required', models.PositiveIntegerField(default=180)),
                ('breaks_minutes_min', models.PositiveIntegerField(default=20)),
                ('breaks_minutes_max', models.PositiveIntegerField(default=60)),
                ('enable_daily_achievements', models.BooleanField(default=True)),
                ('daily_achievements_check_on_start', models.BooleanField(default=False)),
                ('daily_achievements_check_every_x_hours', models.PositiveIntegerField(default=1)),
                ('enable_milestones', models.BooleanField(default=True)),
                ('milestones_check_on_start', models.BooleanField(default=False)),
                ('milestones_check_every_x_hours', models.PositiveIntegerField(default=1)),
                ('enable_raid_notifications', models.BooleanField(default=False)),
                ('raid_notifications_check_on_start', models.BooleanField(default=False)),
                ('raid_notifications_check_every_x_minutes', models.PositiveIntegerField(default=30)),
                ('enable_master', models.BooleanField(default=True)),
                ('master_level_intensity', models.PositiveIntegerField(default=5)),
                ('master_level_on_start', models.BooleanField(default=True)),
                ('master_level_every_x_seconds', models.PositiveIntegerField(default=60)),
                ('master_level_only_once', models.BooleanField(default=False)),
                ('enable_heroes', models.BooleanField(default=True)),
                ('hero_level_intensity', models.PositiveIntegerField(default=3)),
                ('hero_level_on_start', models.BooleanField(default=True)),
                ('hero_level_every_x_seconds', models.PositiveIntegerField(default=60)),
                ('enable_level_skills', models.BooleanField(default=True)),
                ('level_skills_on_start', models.BooleanField(default=True)),
                ('level_skills_every_x_seconds', models.PositiveIntegerField(default=120)),
                ('level_heavenly_strike_cap', models.CharField(choices=[('max', 'MAX'), ('disable', 'DISABLE'), (1, 'ONE'), (2, 'TWO'), (3, 'THREE'), (4, 'FOUR'), (5, 'FIVE'), (6, 'SIX'), (7, 'SEVEN'), (8, 'EIGHT'), (9, 'NINE'), (10, 'TEN'), (11, 'ELEVEN'), (12, 'TWELVE'), (13, 'THIRTEEN'), (14, 'FOURTEEN'), (15, 'FIFTEEN'), (16, 'SIXTEEN'), (17, 'SEVENTEEN'), (18, 'EIGHTEEN'), (19, 'NINETEEN'), (20, 'TWENTY'), (21, 'TWENTY_ONE'), (22, 'TWENTY_TWO'), (23, 'TWENTY_THREE'), (24, 'TWENTY_FOUR'), (25, 'TWENTY_FIVE'), (26, 'TWENTY_SIX'), (27, 'TWENTY_SEVEN'), (28, 'TWENTY_EIGHT'), (29, 'TWENTY_NINE'), (30, 'THIRTY')], default='max', max_length=255)),
                ('level_deadly_strike_cap', models.CharField(choices=[('max', 'MAX'), ('disable', 'DISABLE'), (1, 'ONE'), (2, 'TWO'), (3, 'THREE'), (4, 'FOUR'), (5, 'FIVE'), (6, 'SIX'), (7, 'SEVEN'), (8, 'EIGHT'), (9, 'NINE'), (10, 'TEN'), (11, 'ELEVEN'), (12, 'TWELVE'), (13, 'THIRTEEN'), (14, 'FOURTEEN'), (15, 'FIFTEEN'), (16, 'SIXTEEN'), (17, 'SEVENTEEN'), (18, 'EIGHTEEN'), (19, 'NINETEEN'), (20, 'TWENTY'), (21, 'TWENTY_ONE'), (22, 'TWENTY_TWO'), (23, 'TWENTY_THREE'), (24, 'TWENTY_FOUR'), (25, 'TWENTY_FIVE'), (26, 'TWENTY_SIX'), (27, 'TWENTY_SEVEN'), (28, 'TWENTY_EIGHT'), (29, 'TWENTY_NINE'), (30, 'THIRTY')], default='max', max_length=255)),
                ('level_hand_of_midas_cap', models.CharField(choices=[('max', 'MAX'), ('disable', 'DISABLE'), (1, 'ONE'), (2, 'TWO'), (3, 'THREE'), (4, 'FOUR'), (5, 'FIVE'), (6, 'SIX'), (7, 'SEVEN'), (8, 'EIGHT'), (9, 'NINE'), (10, 'TEN'), (11, 'ELEVEN'), (12, 'TWELVE'), (13, 'THIRTEEN'), (14, 'FOURTEEN'), (15, 'FIFTEEN'), (16, 'SIXTEEN'), (17, 'SEVENTEEN'), (18, 'EIGHTEEN'), (19, 'NINETEEN'), (20, 'TWENTY'), (21, 'TWENTY_ONE'), (22, 'TWENTY_TWO'), (23, 'TWENTY_THREE'), (24, 'TWENTY_FOUR'), (25, 'TWENTY_FIVE'), (26, 'TWENTY_SIX'), (27, 'TWENTY_SEVEN'), (28, 'TWENTY_EIGHT'), (29, 'TWENTY_NINE'), (30, 'THIRTY')], default='max', max_length=255)),
                ('level_fire_sword_cap', models.CharField(choices=[('max', 'MAX'), ('disable', 'DISABLE'), (1, 'ONE'), (2, 'TWO'), (3, 'THREE'), (4, 'FOUR'), (5, 'FIVE'), (6, 'SIX'), (7, 'SEVEN'), (8, 'EIGHT'), (9, 'NINE'), (10, 'TEN'), (11, 'ELEVEN'), (12, 'TWELVE'), (13, 'THIRTEEN'), (14, 'FOURTEEN'), (15, 'FIFTEEN'), (16, 'SIXTEEN'), (17, 'SEVENTEEN'), (18, 'EIGHTEEN'), (19, 'NINETEEN'), (20, 'TWENTY'), (21, 'TWENTY_ONE'), (22, 'TWENTY_TWO'), (23, 'TWENTY_THREE'), (24, 'TWENTY_FOUR'), (25, 'TWENTY_FIVE'), (26, 'TWENTY_SIX'), (27, 'TWENTY_SEVEN'), (28, 'TWENTY_EIGHT'), (29, 'TWENTY_NINE'), (30, 'THIRTY')], default='max', max_length=255)),
                ('level_war_cry_cap', models.CharField(choices=[('max', 'MAX'), ('disable', 'DISABLE'), (1, 'ONE'), (2, 'TWO'), (3, 'THREE'), (4, 'FOUR'), (5, 'FIVE'), (6, 'SIX'), (7, 'SEVEN'), (8, 'EIGHT'), (9, 'NINE'), (10, 'TEN'), (11, 'ELEVEN'), (12, 'TWELVE'), (13, 'THIRTEEN'), (14, 'FOURTEEN'), (15, 'FIFTEEN'), (16, 'SIXTEEN'), (17, 'SEVENTEEN'), (18, 'EIGHTEEN'), (19, 'NINETEEN'), (20, 'TWENTY'), (21, 'TWENTY_ONE'), (22, 'TWENTY_TWO'), (23, 'TWENTY_THREE'), (24, 'TWENTY_FOUR'), (25, 'TWENTY_FIVE'), (26, 'TWENTY_SIX'), (27, 'TWENTY_SEVEN'), (28, 'TWENTY_EIGHT'), (29, 'TWENTY_NINE'), (30, 'THIRTY')], default='max', max_length=255)),
                ('level_shadow_clone_cap', models.CharField(choices=[('max', 'MAX'), ('disable', 'DISABLE'), (1, 'ONE'), (2, 'TWO'), (3, 'THREE'), (4, 'FOUR'), (5, 'FIVE'), (6, 'SIX'), (7, 'SEVEN'), (8, 'EIGHT'), (9, 'NINE'), (10, 'TEN'), (11, 'ELEVEN'), (12, 'TWELVE'), (13, 'THIRTEEN'), (14, 'FOURTEEN'), (15, 'FIFTEEN'), (16, 'SIXTEEN'), (17, 'SEVENTEEN'), (18, 'EIGHTEEN'), (19, 'NINETEEN'), (20, 'TWENTY'), (21, 'TWENTY_ONE'), (22, 'TWENTY_TWO'), (23, 'TWENTY_THREE'), (24, 'TWENTY_FOUR'), (25, 'TWENTY_FIVE'), (26, 'TWENTY_SIX'), (27, 'TWENTY_SEVEN'), (28, 'TWENTY_EIGHT'), (29, 'TWENTY_NINE'), (30, 'THIRTY')], default='max', max_length=255)),
                ('enable_activate_skills', models.BooleanField(default=True)),
                ('activate_skills_on_start', models.BooleanField(default=True)),
                ('activate_skills_every_x_seconds', models.PositiveIntegerField(default=30)),
                ('interval_heavenly_strike', models.PositiveIntegerField(default=0)),
                ('interval_deadly_strike', models.PositiveIntegerField(default=20)),
                ('interval_hand_of_midas', models.PositiveIntegerField(default=30)),
                ('interval_fire_sword', models.PositiveIntegerField(default=40)),
                ('interval_war_cry', models.PositiveIntegerField(default=50)),
                ('interval_shadow_clone', models.PositiveIntegerField(default=60)),
                ('enable_headgear_swap', models.BooleanField(default=False)),
                ('headgear_swap_on_start', models.BooleanField(default=False)),
                ('headgear_swap_every_x_seconds', models.PositiveIntegerField(default=300)),
                ('enable_perk_usage', models.BooleanField(default=False)),
                ('enable_perk_diamond_usage', models.BooleanField(default=False)),
                ('enable_perk_only_tournament', models.BooleanField(default=False)),
                ('use_perks_on_start', models.BooleanField(default=False)),
                ('use_perks_every_x_hours', models.PositiveIntegerField(default=12)),
                ('use_perk_on_prestige', models.CharField(choices=[(('no_perk',), 'NO_PERK'), ('mega_boost', 'MEGA_BOOST'), ('power_of_swiping', 'POWER_OF_SWIPING'), ('adrenaline_rush', 'ADRENALINE_RUSH'), ('make_it_rain', 'MAKE_IT_RAIN'), ('mana_potion', 'MANA_POTION'), ('doom', 'DOOM'), ('clan_crate', 'CLAN_CRATE')], default=('no_perk',), max_length=255)),
                ('enable_mega_boost', models.BooleanField(default=False)),
                ('enable_power_of_swiping', models.BooleanField(default=False)),
                ('enable_adrenaline_rush', models.BooleanField(default=False)),
                ('enable_make_it_rain', models.BooleanField(default=False)),
                ('enable_mana_potion', models.BooleanField(default=False)),
                ('enable_doom', models.BooleanField(default=False)),
                ('enable_clan_crate', models.BooleanField(default=False)),
                ('enable_auto_prestige', models.BooleanField(default=True)),
                ('enable_prestige_threshold_randomization', models.BooleanField(default=True)),
                ('prestige_random_min_time', models.PositiveIntegerField(default=2)),
                ('prestige_random_max_time', models.PositiveIntegerField(default=8)),
                ('prestige_x_minutes', models.PositiveIntegerField(default=45)),
                ('prestige_at_stage', models.PositiveIntegerField(default=0)),
                ('prestige_at_max_stage', models.BooleanField(default=False)),
                ('prestige_at_max_stage_percent', models.DecimalField(decimal_places=3, default=0, max_digits=255)),
                ('enable_artifact_upgrade', models.BooleanField(default=True)),
                ('enable_artifact_discover_enchant', models.BooleanField(default=True)),
                ('shuffle_artifacts', models.BooleanField(default=True)),
                ('enable_statistics', models.BooleanField(default=True)),
                ('update_statistics_on_start', models.BooleanField(default=False)),
                ('update_statistics_every_x_minutes', models.PositiveIntegerField(default=60)),
                ('enable_logging', models.BooleanField(default=True)),
                ('logging_level', models.CharField(choices=[('ERROR', 'ERROR'), ('WARNING', 'WARNING'), ('INFO', 'INFO'), ('DEBUG', 'DEBUG')], default='INFO', max_length=255)),
                ('ignore_artifacts', models.ManyToManyField(blank=True, related_name='ignore_artifacts', to='db.Artifact')),
                ('upgrade_artifacts', models.ManyToManyField(blank=True, related_name='upgrade_artifacts', to='db.Artifact')),
            ],
            bases=(models.Model, db.mixins.ExportModelMixin),
        ),
        migrations.CreateModel(
            name='GameStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('highest_stage_reached', models.CharField(blank=True, max_length=255, null=True)),
                ('total_pet_level', models.CharField(blank=True, max_length=255, null=True)),
                ('gold_earned', models.CharField(blank=True, max_length=255, null=True)),
                ('taps', models.CharField(blank=True, max_length=255, null=True)),
                ('titans_killed', models.CharField(blank=True, max_length=255, null=True)),
                ('bosses_killed', models.CharField(blank=True, max_length=255, null=True)),
                ('critical_hits', models.CharField(blank=True, max_length=255, null=True)),
                ('chestersons_killed', models.CharField(blank=True, max_length=255, null=True)),
                ('prestiges', models.CharField(blank=True, max_length=255, null=True)),
                ('days_since_install', models.CharField(blank=True, max_length=255, null=True)),
                ('play_time', models.CharField(blank=True, max_length=255, null=True)),
                ('relics_earned', models.CharField(blank=True, max_length=255, null=True)),
                ('fairies_tapped', models.CharField(blank=True, max_length=255, null=True)),
                ('daily_achievements', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GlobalConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enable_failsafe', models.BooleanField(default=True)),
                ('enable_game_event', models.BooleanField(default=False)),
                ('enable_pihole', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Prestige',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('stage', models.PositiveIntegerField(blank=True, null=True)),
                ('artifact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.Artifact')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.BotInstance')),
            ],
        ),
        migrations.CreateModel(
            name='PrestigeStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.BotInstance')),
                ('prestiges', models.ManyToManyField(blank=True, to='db.Prestige')),
            ],
        ),
        migrations.CreateModel(
            name='QueuedFunction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('function', models.CharField(max_length=255)),
                ('queued', models.DateTimeField()),
                ('duration', models.PositiveIntegerField()),
                ('duration_type', models.CharField(choices=[('seconds', 'SECONDS'), ('minutes', 'MINUTES'), ('hours', 'HOURS')], max_length=255)),
                ('eta', models.DateTimeField()),
                ('instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.BotInstance')),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=255)),
                ('version', models.CharField(max_length=255)),
                ('started', models.DateTimeField()),
                ('stopped', models.DateTimeField(blank=True, null=True)),
                ('snapshot_json', models.TextField()),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Configuration')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_instance', to='db.BotInstance')),
                ('log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Log')),
            ],
        ),
        migrations.CreateModel(
            name='SessionStatistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.BotInstance')),
                ('sessions', models.ManyToManyField(blank=True, to='db.Session')),
            ],
        ),
        migrations.CreateModel(
            name='Statistics',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('artifact_statistics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.ArtifactStatistics')),
                ('bot_statistics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.BotStatistics')),
                ('game_statistics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.GameStatistics')),
                ('instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.BotInstance')),
                ('prestige_statistics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.PrestigeStatistics')),
                ('session_statistics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.SessionStatistics')),
            ],
        ),
        migrations.CreateModel(
            name='Tier',
            fields=[
                ('tier', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
            bases=(models.Model, db.mixins.ExportModelMixin),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=255)),
                ('state_json', models.CharField(max_length=255)),
            ],
        ),
        migrations.AddField(
            model_name='prestige',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Session'),
        ),
        migrations.AddField(
            model_name='configuration',
            name='upgrade_owned_tier',
            field=models.ManyToManyField(blank=True, related_name='upgrade_tiers', to='db.Tier'),
        ),
        migrations.AddField(
            model_name='botinstance',
            name='configuration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.Configuration'),
        ),
        migrations.AddField(
            model_name='botinstance',
            name='last_prestige',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.Prestige'),
        ),
        migrations.AddField(
            model_name='botinstance',
            name='log',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.Log'),
        ),
        migrations.AddField(
            model_name='botinstance',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='db.Session'),
        ),
        migrations.AddField(
            model_name='artifactstatistics',
            name='instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.BotInstance'),
        ),
        migrations.AddField(
            model_name='artifactowned',
            name='instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.BotInstance'),
        ),
        migrations.AddField(
            model_name='artifact',
            name='tier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db.Tier'),
        ),
    ]
